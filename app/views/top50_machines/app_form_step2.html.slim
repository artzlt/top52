h3 = "Добавление заявки в Top50 (Шаг 2 из 4)"
h4 = "Вычислительные узлы системы"
br

= bootstrap_form_tag url: top50_machines_app_form_step2_post_path do |f|
  - node_idx = 0
  - @cur_data.select {|k,v| k.starts_with? 'top50_node_'}.sort_by {|k,v| v[:fake_id].to_i}.each do |node, node_data|
    - node_idx += 1
    div class="panel panel-default"
      div class="panel-heading"
        h4 = format("Группа узлов %d", node_idx)
      div class="panel-body"
        = f.fields_for format(node) do |f2|
          = f2.hidden_field :fake_id, value: get_cur2(node, :fake_id)
          = f2.number_field :node_cnt, label: "Количество вычислительных узлов в группе (*)", value: get_cur2(node, :node_cnt), min: 1, autofocus: is_focused(node, :node_cnt)
          div class="panel panel-info"
            div class="panel-heading"
              = "Сведения об основном процессоре:"
            div class="panel-body"
              = f2.number_field :cpu_cnt, label: "Количество процессоров на одном узле (*)", value: get_cur2(node, :cpu_cnt), min: 1
              = f2.collection_select :cpu_model_obj_id, @cpu_objects, :id, :name, {label: "Модель процессора (*)", include_blank: true, selected: get_cur2(node, :cpu_model_obj_id)}
              - if get_cur(node).has_key? :custom_cpu_model and not get_cur2(node, :cpu_model_obj_id).present?
                div class="panel panel-primary"
                  div class="panel-heading"
                    = "Добавление нового процессора"
                  div class="panel-body"
                    = f2.collection_select :custom_cpu_vendor_id, Top50DictionaryElem.where(dict_id: @cpu_vendor_dict_id, is_valid: 1).order(:name), :id, :name, {label: "Производитель процессора (*)", include_blank: true, selected: get_cur2(node, :custom_cpu_vendor_id)}
                    = "Отсутствует в списке? Указать:"
                    = f2.text_field :custom_cpu_vendor, value: get_cur2(node, :custom_cpu_vendor), skip_label: true
                    = f2.collection_select :custom_cpu_gen_id, Top50DictionaryElem.where(dict_id: @cpu_gen_dict_id, is_valid: 1).order(:name), :id, :name, {label: "Микроархитектура процессора", include_blank: true, selected: get_cur2(node, :custom_cpu_gen_id)}
                    = "Отсутствует в списке? Указать: "
                    = f2.text_field :custom_cpu_gen, value: get_cur2(node, :custom_cpu_gen), skip_label: true
                    = f2.collection_select :custom_cpu_family_id, Top50DictionaryElem.where(dict_id: @cpu_family_dict_id, is_valid: 1).order(:name), :id, :name, {label: "Семейство процессорa", include_blank: true, selected: get_cur2(node, :custom_cpu_family_id)}
                    = "Отсутствует в списке? Указать: "
                    = f2.text_field :custom_cpu_family, value: get_cur2(node, :custom_cpu_family), skip_label: true
                    br
                    = f2.text_field :custom_cpu_model, label: "Наименование модели процессора (без названия производителя, например, Xeon Gold 6140) (*)", value: get_cur2(node, :custom_cpu_model), autofocus: is_focused(node, :custom_cpu_model)
                    = f2.number_field :custom_cpu_freq, label: "Тактовая частота процессора (МГц) (*)", value: get_cur2(node, :custom_cpu_freq), min: 1
                    = f2.number_field :custom_cpu_core_cnt, label: "Количество ядер (*)", value: get_cur2(node, :custom_cpu_core_cnt), min: 1
              - else
                = "Отсутствует в списке? "
                = f2.submit "Добавить модель процессора", class: "a", name: format("%s[commit]", node)
                br
                - custom_cpus = @custom_cpus.reject {|x| x[1] == get_cur2(node, :fake_id)}
                - if custom_cpus.present? and custom_cpus.length > 0
                  = "&nbsp;&nbsp;или".html_safe
                  br
                  = f2.select :custom_cpu_from_node, options_for_select(custom_cpus, get_cur2(node, :custom_cpu_from_node)), {label: "Выбрать процессор из ранее добавленных", include_blank: true}
          div class="panel panel-danger"
            div class="panel-heading"
              = "Оперативная память (RAM):"
            div class="panel-body"
              = f2.number_field :ram_size, label: "Объем оперативной памяти на одном узле (в ГБ) (*)", step: :any, value: get_cur2(node, :ram_size)
            br
          = f2.check_box :acc_only, checked: (get_cur2(node, :acc_only).to_i != 0), label: "Ускоритель выполняет роль CPU (bootable)"
          div class="panel panel-warning"
            div class="panel-heading"
              = "Ускорители (при наличии):"
            div class="panel-body"
              = f2.number_field :acc_cnt, label: "Количество ускорителей на одном узле", value: get_cur2(node, :acc_cnt), min: 1
              = f2.collection_select :acc_model_obj_id, @acc_objects, :id, :name, {label: "Модель ускорителя", include_blank: true, selected: get_cur2(node, :acc_model_obj_id)}
              - if get_cur(node).has_key? :custom_acc_model and not get_cur2(node, :acc_model_obj_id).present?
                div class="panel panel-primary"
                  div class="panel-heading"
                    = "Добавление нового ускорителя"
                  div class="panel-body"
                    = f2.collection_select :custom_acc_type_id, Top50ObjectType.where(id: @acc_all_typeids, is_valid: 1).order(:name), :id, :name, {label: "Тип ускорителя (*)", include_blank: true, selected: get_cur2(node, :custom_acc_type_id)}
                    = "Отсутствует в списке? Указать:"
                    = f2.text_field :custom_acc_type, value: get_cur2(node, :custom_acc_type), skip_label: true
                    = f2.collection_select :custom_acc_vendor_id, Top50DictionaryElem.where(dict_id: @acc_vendor_dict_id, is_valid: 1).order(:name), :id, :name, {label: "Производитель ускорителя (*)", include_blank: true, selected: get_cur2(node, :custom_acc_vendor_id)}
                    = "Отсутствует в списке? Указать:"
                    = f2.text_field :custom_acc_vendor, value: get_cur2(node, :custom_acc_vendor), skip_label: true
                    br
                    = f2.text_field :custom_acc_model, label: "Наименование модели ускорителя (без названия производителя, например, Tesla K40M) (*)", value: get_cur2(node, :custom_acc_model), autofocus: is_focused(node, :custom_acc_model)
                    = f2.number_field :custom_acc_freq, label: "Тактовая частота ускорителя (МГц)", value: get_cur2(node, :custom_acc_freq), min: 1
                    = f2.number_field :custom_acc_core_cnt, label: "Количество ядер/мультипроцессоров/мультипроцессорных блоков (*)", value: get_cur2(node, :custom_acc_core_cnt), min: 1
                    = f2.number_field :custom_acc_microcore_cnt, label: "Количество микроядер/CUDA-ядер", value: get_cur2(node, :custom_acc_microcore_cnt), min: 1
              - else
                = "Отсутствует в списке? "
                = f2.submit "Добавить модель ускорителя", class: "a", name: format("%s[commit]", node)
                br
                - custom_accs = @custom_accs.reject {|x| x[1] == get_cur2(node, :fake_id)}
                - if custom_accs.present? and custom_accs.length > 0
                  = "&nbsp;&nbsp;или".html_safe
                  br
                  = f2.select :custom_acc_from_node, options_for_select(custom_accs, get_cur2(node, :custom_acc_from_node)), {label: "Выбрать ускоритель из ранее добавленных", include_blank: true}
          = f2.submit "Удалить эту группу узлов", class: "a", name: format("%s[commit]", node)
  = f.hidden_field :node_group_cnt, value: node_idx
  = f.hidden_field :last_fake_id, value: get_cur(:last_fake_id).present? ? get_cur(:last_fake_id) : 0
  = f.submit "Добавить группу узлов"
  br
  br
  br
  = f.text_area :comment, label: "Комментарии и уточнения", value: get_cur(:comment)
  br
  = render "hidden_saved_data"
  = f.hidden_field :sym, value: :step2_data
  = f.submit "Назад"
  = "&nbsp;&nbsp;".html_safe
  = f.submit "Далее"
